# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: weekly-tasks

plugins:
  - serverless-bundle
  - serverless-iam-roles-per-function
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: sa-east-1
  memorySize: 256
  environment:
    TASKS_TABLE_NAME: ${self:custom.TasksTable.name}

resources:
  Resources:
    TasksTable: ${file(resources/TasksTable.yml):TasksTable}

functions:
  createTask:
    handler: src/handlers/createTask.handler
    events:
      - httpApi:
          path: /task/add
          method: POST
    iamRoleStatements:
      - ${file(iam/CreateTask.yml):CreateTaskIAM}
  getTasks:
    handler: src/handlers/getTasks.handler
    events:
      - httpApi:
          path: /tasks
          method: GET
    iamRoleStatements:
      - ${file(iam/GetTasks.yml):GetTasksIAM}
  getTask:
    handler: src/handlers/getTask.handler
    events:
      - httpApi:
          path: /task/{id}
          method: GET
    iamRoleStatements:
      - ${file(iam/GetTasks.yml):GetTaskIAM}
  getTaskByUser:
    handler: src/handlers/getTaskByUser.handler
    events:
      - httpApi:
          path: /tasks/{UserId}
          method: GET
    iamRoleStatements:
      - ${file(iam/GetTasks.yml):GetTaskByUserIAM}

custom:
  TasksTable:
    name: !Ref TasksTable
    arn: !GetAtt TasksTable.Arn